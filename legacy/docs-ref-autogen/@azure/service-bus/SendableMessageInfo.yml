### YamlMime:TSType
name: SendableMessageInfo
uid: '@azure/service-bus.SendableMessageInfo'
package: '@azure/service-bus'
summary: Describes the message to be sent to Service Bus.
fullName: SendableMessageInfo
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: body
    uid: '@azure/service-bus.SendableMessageInfo.body'
    package: '@azure/service-bus'
    summary: The message body that needs to be sent or is received.
    fullName: body
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'body: any'
      return:
        type: any
        description: ''
  - name: contentType
    uid: '@azure/service-bus.SendableMessageInfo.contentType'
    package: '@azure/service-bus'
    summary: >-
      The content type of the message. Optionally describes

      the payload of the message, with a descriptor following the format of
      RFC2045, Section 5, for

      example "application/json".
    fullName: contentType
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'contentType?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: correlationId
    uid: '@azure/service-bus.SendableMessageInfo.correlationId'
    package: '@azure/service-bus'
    summary: >-
      The correlation identifier that allows an

      application to specify a context for the message for the purposes of
      correlation, for example

      reflecting the MessageId of a message that is being replied to.

      See [Message Routing and
      Correlation](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-messages-payloads?#message-routing-and-correlation).
    fullName: correlationId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'correlationId?: string | number | Buffer'
      return:
        type: string | number | Buffer
        description: ''
  - name: label
    uid: '@azure/service-bus.SendableMessageInfo.label'
    package: '@azure/service-bus'
    summary: >-
      The application specific label. This property enables the

      application to indicate the purpose of the message to the receiver in a
      standardized. fashion,

      similar to an email subject line. The mapped AMQP property is "subject".
    fullName: label
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'label?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: messageId
    uid: '@azure/service-bus.SendableMessageInfo.messageId'
    package: '@azure/service-bus'
    summary: >-
      The message identifier is an

      application-defined value that uniquely identifies the message and its
      payload.


      Note: Numbers that are not whole integers are not allowed.
    fullName: messageId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'messageId?: string | number | Buffer'
      return:
        type: string | number | Buffer
        description: ''
  - name: partitionKey
    uid: '@azure/service-bus.SendableMessageInfo.partitionKey'
    package: '@azure/service-bus'
    summary: >-
      The partition key for sending a message to a partitioned entity.

      Maximum length is 128 characters. For [partitioned
      entities](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-partitioning),

      setting this value enables assigning related messages to the same internal
      partition,

      so that submission sequence order is correctly recorded. The partition is
      chosen by a hash

      function over this value and cannot be chosen directly.

      - For session-aware entities, the `sessionId` property overrides this
      value.

      - For non partitioned entities, partition key will be ignored
    fullName: partitionKey
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'partitionKey?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: replyTo
    uid: '@azure/service-bus.SendableMessageInfo.replyTo'
    package: '@azure/service-bus'
    summary: >-
      The address of an entity to send replies to. This optional and

      application-defined value is a standard way to express a reply path to the
      receiver of the

      message. When a sender expects a reply, it sets the value to the absolute
      or relative path of

      the queue or topic it expects the reply to be sent to. See

      [Message Routing and
      Correlation](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-messages-payloads?#message-routing-and-correlation).
    fullName: replyTo
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'replyTo?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: replyToSessionId
    uid: '@azure/service-bus.SendableMessageInfo.replyToSessionId'
    package: '@azure/service-bus'
    summary: >-
      The session identifier augmenting the `replyTo` address.

      Maximum length is 128 characters. This value augments the ReplyTo
      information and specifies

      which SessionId should be set for the reply when sent to the reply entity.

      See [Message Routing and
      Correlation](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-messages-payloads?#message-routing-and-correlation).
    fullName: replyToSessionId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'replyToSessionId?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: scheduledEnqueueTimeUtc
    uid: '@azure/service-bus.SendableMessageInfo.scheduledEnqueueTimeUtc'
    package: '@azure/service-bus'
    summary: >-
      The date and time in UTC at which the message will

      be enqueued. This property returns the time in UTC; when setting the
      property, the

      supplied DateTime value must also be in UTC. This value is for delayed
      message sending.

      It is utilized to delay messages sending to a specific time in the future.
      Message enqueuing

      time does not mean that the message will be sent at the same time. It will
      get enqueued,

      but the actual sending time depends on the queue's workload and its state.
    fullName: scheduledEnqueueTimeUtc
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'scheduledEnqueueTimeUtc?: Date'
      return:
        type: Date
        description: ''
  - name: sessionId
    uid: '@azure/service-bus.SendableMessageInfo.sessionId'
    package: '@azure/service-bus'
    summary: >-
      The session identifier for a session-aware entity. Maximum

      length is 128 characters. For session-aware entities, this
      application-defined value specifies

      the session affiliation of the message. Messages with the same session
      identifier are subject

      to summary locking and enable exact in-order processing and
      demultiplexing. For

      session-unaware entities, this value is ignored.

      [Message
      Sessions](https://docs.microsoft.com/azure/service-bus-messaging/message-sessions).
    fullName: sessionId
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'sessionId?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: timeToLive
    uid: '@azure/service-bus.SendableMessageInfo.timeToLive'
    package: '@azure/service-bus'
    summary: >-
      The messageâ€™s time to live value. This value is the relative

      duration after which the message expires, starting from the instant the
      message has been

      accepted and stored by the broker, as captured in `enqueuedTimeUtc`. When
      not set explicitly,

      the assumed value is the DefaultTimeToLive for the respective queue or
      topic. A message-level

      `timeToLive` value cannot be longer than the entity's DefaultTimeToLive
      setting and it is

      silently adjusted if it does. See

      [Expiration](https://docs.microsoft.com/azure/service-bus-messaging/message-expiration).
    fullName: timeToLive
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'timeToLive?: undefined | number'
      return:
        type: undefined | number
        description: ''
  - name: to
    uid: '@azure/service-bus.SendableMessageInfo.to'
    package: '@azure/service-bus'
    summary: >-
      The "to" address. This property is reserved for future use in routing

      scenarios and presently ignored by the broker itself. Applications can use
      this value in

      rule-driven [auto-forward
      chaining](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-auto-forwarding)

      scenarios to indicate the intended logical destination of the message.
    fullName: to
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'to?: undefined | string'
      return:
        type: undefined | string
        description: ''
  - name: userProperties
    uid: '@azure/service-bus.SendableMessageInfo.userProperties'
    package: '@azure/service-bus'
    summary: |-
      The application specific properties which can be
      used for custom message metadata.
    fullName: userProperties
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'userProperties?: undefined | [key: string]: any'
      return:
        type: 'undefined | [key: string]: any'
        description: ''
  - name: viaPartitionKey
    uid: '@azure/service-bus.SendableMessageInfo.viaPartitionKey'
    package: '@azure/service-bus'
    summary: >-
      The partition key for sending a message into an entity

      via a partitioned transfer queue. Maximum length is 128 characters. If a
      message is sent via a

      transfer queue in the scope of a transaction, this value selects the
      transfer queue partition:

      This is functionally equivalent to `partitionKey` property and ensures
      that messages are kept

      together and in order as they are transferred.

      See [Transfers and Send
      Via](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-transactions#transfers-and-send-via).
    fullName: viaPartitionKey
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'viaPartitionKey?: undefined | string'
      return:
        type: undefined | string
        description: ''
