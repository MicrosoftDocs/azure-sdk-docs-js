### YamlMime:TSType
name: BlobClient
uid: '@azure/storage-blob.BlobClient|latest'
package: '@azure/storage-blob'
summary: >-
  A BlobClient represents a URL to an Azure Storage blob; the blob may be a
  block blob,

  append blob, or page blob.
fullName: BlobClient
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: 'BlobClient(string, Pipeline)'
    uid: '@azure/storage-blob.BlobClient.constructor_2|latest'
    package: '@azure/storage-blob'
    summary: >-
      Creates an instance of BlobClient.

      This method accepts an encoded URL or non-encoded URL pointing to a blob.

      Encoded URL string will NOT be escaped twice, only special characters in
      URL path will be escaped.

      If a blob name includes ? or %, blob name must be encoded in the URL.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'new BlobClient(url: string, pipeline: Pipeline)'
      parameters:
        - id: url
          type: string
          description: |-
            A Client string pointing to Azure Storage blob service, such as
                                "https://myaccount.blob.core.windows.net". You can append a SAS
                                if using AnonymousCredential, such as "https://myaccount.blob.core.windows.net?sasString".
        - id: pipeline
          type: <xref uid="@azure/storage-blob.Pipeline|latest" />
          description: |-
            Call newPipeline() to create a default
                                       pipeline, or provide a customized pipeline.
  - name: >-
      BlobClient(string, StorageSharedKeyCredential | AnonymousCredential |
      TokenCredential, StoragePipelineOptions)
    uid: '@azure/storage-blob.BlobClient.constructor_1|latest'
    package: '@azure/storage-blob'
    summary: >-
      Creates an instance of BlobClient.

      This method accepts an encoded URL or non-encoded URL pointing to a blob.

      Encoded URL string will NOT be escaped twice, only special characters in
      URL path will be escaped.

      If a blob name includes ? or %, blob name must be encoded in the URL.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new BlobClient(url: string, credential?: StorageSharedKeyCredential |
        AnonymousCredential | TokenCredential, options?: StoragePipelineOptions)
      parameters:
        - id: url
          type: string
          description: |-
            A Client string pointing to Azure Storage blob service, such as
                                "https://myaccount.blob.core.windows.net". You can append a SAS
                                if using AnonymousCredential, such as "https://myaccount.blob.core.windows.net?sasString".
        - id: credential
          type: >-
            <xref uid="@azure/storage-blob.StorageSharedKeyCredential|latest" /> |
            <xref uid="@azure/storage-blob.AnonymousCredential|latest" /> |
            TokenCredential
          description: >-
            Such as AnonymousCredential, StorageSharedKeyCredential or any
            credential from the @azure/identity package to authenticate requests
            to the service. You can also provide an object that implements the
            TokenCredential interface. If not specified, AnonymousCredential is
            used.
        - id: options
          type: <xref uid="@azure/storage-blob.StoragePipelineOptions|latest" />
          description: ''
  - name: 'BlobClient(string, string, string, StoragePipelineOptions)'
    uid: '@azure/storage-blob.BlobClient.constructor|latest'
    package: '@azure/storage-blob'
    summary: Creates an instance of BlobClient from connection string.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new BlobClient(connectionString: string, containerName: string,
        blobName: string, options?: StoragePipelineOptions)
      parameters:
        - id: connectionString
          type: string
          description: >-
            Account connection string or a SAS connection string of an Azure
            storage account.
                                             [ Note - Account connection string can only be used in NODE.JS runtime. ]
                                             Account connection string example -
                                             `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`
                                             SAS connection string example -
                                             `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`
        - id: containerName
          type: string
          description: Container name.
        - id: blobName
          type: string
          description: Blob name.
        - id: options
          type: <xref uid="@azure/storage-blob.StoragePipelineOptions|latest" />
          description: ''
properties:
  - name: accountName
    uid: '@azure/storage-blob.BlobClient.accountName|latest'
    package: '@azure/storage-blob'
    summary: ''
    fullName: accountName
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'accountName: string'
      return:
        type: string
        description: ''
  - name: containerName
    uid: '@azure/storage-blob.BlobClient.containerName|latest'
    package: '@azure/storage-blob'
    summary: The name of the storage container the blob is associated with.
    fullName: containerName
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: string containerName
      return:
        type: string
        description: ''
  - name: credential
    uid: '@azure/storage-blob.BlobClient.credential|latest'
    package: '@azure/storage-blob'
    summary: >-
      Such as AnonymousCredential, StorageSharedKeyCredential or any credential
      from the @azure/identity package to authenticate requests to the service.
      You can also provide an object that implements the TokenCredential
      interface. If not specified, AnonymousCredential is used.
    fullName: credential
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        credential: StorageSharedKeyCredential | AnonymousCredential |
        TokenCredential
      return:
        type: >-
          <xref uid="@azure/storage-blob.StorageSharedKeyCredential|latest" /> | <xref
          uid="@azure/storage-blob.AnonymousCredential|latest" /> | TokenCredential
        description: ''
  - name: name
    uid: '@azure/storage-blob.BlobClient.name|latest'
    package: '@azure/storage-blob'
    summary: The name of the blob.
    fullName: name
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: string name
      return:
        type: string
        description: ''
  - name: url
    uid: '@azure/storage-blob.BlobClient.url|latest'
    package: '@azure/storage-blob'
    summary: Encoded URL string value.
    fullName: url
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'url: string'
      return:
        type: string
        description: ''
methods:
  - name: 'abortCopyFromURL(string, BlobAbortCopyFromURLOptions)'
    uid: '@azure/storage-blob.BlobClient.abortCopyFromURL|latest'
    package: '@azure/storage-blob'
    summary: >-
      Aborts a pending asynchronous Copy Blob operation, and leaves a
      destination blob with zero

      length and full metadata. Version 2012-02-12 and newer.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function abortCopyFromURL(copyId: string, options?:
        BlobAbortCopyFromURLOptions)
      parameters:
        - id: copyId
          type: string
          description: Id of the Copy From URL operation.
        - id: options
          type: <xref uid="@azure/storage-blob.BlobAbortCopyFromURLOptions|latest" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref
          uid="@azure/storage-blob.BlobAbortCopyFromURLResponse|latest" />&gt;
        description: ''
  - name: 'beginCopyFromURL(string, BlobBeginCopyFromURLOptions)'
    uid: '@azure/storage-blob.BlobClient.beginCopyFromURL|latest'
    package: '@azure/storage-blob'
    summary: >-
      Asynchronously copies a blob to a destination within the storage account.

      This method returns a long running operation poller that allows you to
      wait

      indefinitely until the copy is completed.

      You can also cancel a copy before it is completed by calling
      `cancelOperation` on the poller.

      Note that the onProgress callback will not be invoked if the operation
      completes in the first

      request, and attempting to cancel a completed copy will result in an error
      being thrown.

      In version 2012-02-12 and later, the source for a Copy Blob operation can
      be

      a committed blob in any Azure storage account.

      Beginning with version 2015-02-21, the source for a Copy Blob operation
      can be

      an Azure file in any Azure storage account.

      Only storage accounts created on or after June 7th, 2012 allow the Copy
      Blob

      operation to copy from another storage account.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCopyFromURL(copySource: string, options?:
        BlobBeginCopyFromURLOptions)
      parameters:
        - id: copySource
          type: string
          description: url to the source Azure Blob/File.
        - id: options
          type: <xref uid="@azure/storage-blob.BlobBeginCopyFromURLOptions|latest" />
          description: ''
      return:
        type: >-
          Promise&lt;PollerLike&lt;PollOperationState&lt;<xref
          uid="@azure/storage-blob.BlobBeginCopyFromURLResponse|latest" />&gt;, <xref
          uid="@azure/storage-blob.BlobBeginCopyFromURLResponse|latest" />&gt;&gt;
        description: ''
  - name: createSnapshot(BlobCreateSnapshotOptions)
    uid: '@azure/storage-blob.BlobClient.createSnapshot|latest'
    package: '@azure/storage-blob'
    summary: Creates a read-only snapshot of a blob.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function createSnapshot(options?: BlobCreateSnapshotOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/storage-blob.BlobCreateSnapshotOptions|latest" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="@azure/storage-blob.BlobCreateSnapshotResponse|latest"
          />&gt;
        description: ''
  - name: delete(BlobDeleteOptions)
    uid: '@azure/storage-blob.BlobClient.delete|latest'
    package: '@azure/storage-blob'
    summary: >-
      Marks the specified blob or snapshot for deletion. The blob is later
      deleted

      during garbage collection. Note that in order to delete a blob, you must
      delete

      all of its snapshots. You can delete both at the same time with the Delete

      Blob operation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function delete(options?: BlobDeleteOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/storage-blob.BlobDeleteOptions|latest" />
          description: ''
      return:
        type: Promise&lt;<xref uid="@azure/storage-blob.BlobDeleteResponse|latest" />&gt;
        description: ''
  - name: deleteIfExists(BlobDeleteOptions)
    uid: '@azure/storage-blob.BlobClient.deleteIfExists|latest'
    package: '@azure/storage-blob'
    summary: >-
      Marks the specified blob or snapshot for deletion if it exists. The blob
      is later deleted

      during garbage collection. Note that in order to delete a blob, you must
      delete

      all of its snapshots. You can delete both at the same time with the Delete

      Blob operation.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function deleteIfExists(options?: BlobDeleteOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/storage-blob.BlobDeleteOptions|latest" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="@azure/storage-blob.BlobDeleteIfExistsResponse|latest"
          />&gt;
        description: ''
  - name: 'download(number, number, BlobDownloadOptions)'
    uid: '@azure/storage-blob.BlobClient.download|latest'
    package: '@azure/storage-blob'
    summary: >
      Reads or downloads a blob from the system, including its metadata and
      properties.

      You can also call Get Blob to read a snapshot.

      * In Node.js, data returns in a Readable stream readableStreamBody

      * In browsers, data returns in a promise blobBody
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function download(offset?: number, count?: number, options?:
        BlobDownloadOptions)
      parameters:
        - id: offset
          type: number
          description: ''
        - id: count
          type: number
          description: ''
        - id: options
          type: <xref uid="@azure/storage-blob.BlobDownloadOptions|latest" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="@azure/storage-blob.BlobDownloadResponseParsed|latest"
          />&gt;
        description: ''
  - name: 'downloadToBuffer(Buffer, number, number, BlobDownloadToBufferOptions)'
    uid: '@azure/storage-blob.BlobClient.downloadToBuffer_1|latest'
    package: '@azure/storage-blob'
    summary: >
      ONLY AVAILABLE IN NODE.JS RUNTIME.

      Downloads an Azure Blob in parallel to a buffer.

      Offset and count are optional, downloads the entire blob if they are not
      provided.


      Warning: Buffers can only support files up to about one gigabyte on 32-bit
      systems or about two

      gigabytes on 64-bit systems due to limitations of Node.js/V8. For blobs
      larger than this size,

      consider <xref:downloadToFile>.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function downloadToBuffer(buffer: Buffer, offset?: number, count?:
        number, options?: BlobDownloadToBufferOptions)
      parameters:
        - id: buffer
          type: Buffer
          description: 'Buffer to be fill, must have length larger than count'
        - id: offset
          type: number
          description: From which position of the block blob to download(in bytes)
        - id: count
          type: number
          description: ''
        - id: options
          type: <xref uid="@azure/storage-blob.BlobDownloadToBufferOptions|latest" />
          description: ''
      return:
        type: Promise&lt;Buffer&gt;
        description: ''
  - name: 'downloadToBuffer(number, number, BlobDownloadToBufferOptions)'
    uid: '@azure/storage-blob.BlobClient.downloadToBuffer|latest'
    package: '@azure/storage-blob'
    summary: >
      ONLY AVAILABLE IN NODE.JS RUNTIME.

      Downloads an Azure Blob in parallel to a buffer.

      Offset and count are optional, downloads the entire blob if they are not
      provided.


      Warning: Buffers can only support files up to about one gigabyte on 32-bit
      systems or about two

      gigabytes on 64-bit systems due to limitations of Node.js/V8. For blobs
      larger than this size,

      consider <xref:downloadToFile>.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function downloadToBuffer(offset?: number, count?: number, options?:
        BlobDownloadToBufferOptions)
      parameters:
        - id: offset
          type: number
          description: From which position of the block blob to download(in bytes)
        - id: count
          type: number
          description: ''
        - id: options
          type: <xref uid="@azure/storage-blob.BlobDownloadToBufferOptions|latest" />
          description: ''
      return:
        type: Promise&lt;Buffer&gt;
        description: ''
  - name: 'downloadToFile(string, number, number, BlobDownloadOptions)'
    uid: '@azure/storage-blob.BlobClient.downloadToFile|latest'
    package: '@azure/storage-blob'
    summary: >
      ONLY AVAILABLE IN NODE.JS RUNTIME.

      Downloads an Azure Blob to a local file.

      Fails if the the given file path already exits.

      Offset and count are optional, pass 0 and undefined respectively to
      download the entire blob.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function downloadToFile(filePath: string, offset?: number, count?:
        number, options?: BlobDownloadOptions)
      parameters:
        - id: filePath
          type: string
          description: ''
        - id: offset
          type: number
          description: ''
        - id: count
          type: number
          description: ''
        - id: options
          type: <xref uid="@azure/storage-blob.BlobDownloadOptions|latest" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="@azure/storage-blob.BlobDownloadResponseParsed|latest"
          />&gt;
        description: |-
          The response data for blob download operation,
                                                          but with readableStreamBody set to undefined since its
                                                          content is already read and written into a local file
                                                          at the specified path.
  - name: exists(BlobExistsOptions)
    uid: '@azure/storage-blob.BlobClient.exists|latest'
    package: '@azure/storage-blob'
    summary: >
      Returns true if the Azure blob resource represented by this client exists;
      false otherwise.

      NOTE: use this function with care since an existing blob might be deleted
      by other clients or

      applications. Vice versa new blobs might be added by other clients or
      applications after this

      function completes.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function exists(options?: BlobExistsOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/storage-blob.BlobExistsOptions|latest" />
          description: ''
      return:
        type: Promise&lt;boolean&gt;
        description: ''
  - name: generateSasUrl(BlobGenerateSasUrlOptions)
    uid: '@azure/storage-blob.BlobClient.generateSasUrl|latest'
    package: '@azure/storage-blob'
    summary: >
      Only available for BlobClient constructed with a shared key credential.

      Generates a Blob Service Shared Access Signature (SAS) URI based on the
      client properties

      and parameters passed in. The SAS is signed by the shared key credential
      of the client.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function generateSasUrl(options: BlobGenerateSasUrlOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/storage-blob.BlobGenerateSasUrlOptions|latest" />
          description: Optional parameters.
      return:
        type: Promise&lt;string&gt;
        description: >-
          The SAS URI consisting of the URI to the resource represented by this
          client, followed by the generated SAS token.
  - name: getAppendBlobClient()
    uid: '@azure/storage-blob.BlobClient.getAppendBlobClient|latest'
    package: '@azure/storage-blob'
    summary: Creates a AppendBlobClient object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getAppendBlobClient()
      return:
        type: <xref uid="@azure/storage-blob.AppendBlobClient|latest" />
        description: ''
  - name: getBlobLeaseClient(string)
    uid: '@azure/storage-blob.BlobClient.getBlobLeaseClient|latest'
    package: '@azure/storage-blob'
    summary: 'Get a <xref:@azure/storage-blob.BlobLeaseClient|latest> that manages leases on the blob.'
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getBlobLeaseClient(proposeLeaseId?: string)'
      parameters:
        - id: proposeLeaseId
          type: string
          description: ''
      return:
        type: <xref uid="@azure/storage-blob.BlobLeaseClient|latest" />
        description: A new BlobLeaseClient object for managing leases on the blob.
  - name: getBlockBlobClient()
    uid: '@azure/storage-blob.BlobClient.getBlockBlobClient|latest'
    package: '@azure/storage-blob'
    summary: Creates a BlockBlobClient object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getBlockBlobClient()
      return:
        type: <xref uid="@azure/storage-blob.BlockBlobClient|latest" />
        description: ''
  - name: getPageBlobClient()
    uid: '@azure/storage-blob.BlobClient.getPageBlobClient|latest'
    package: '@azure/storage-blob'
    summary: Creates a PageBlobClient object.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getPageBlobClient()
      return:
        type: <xref uid="@azure/storage-blob.PageBlobClient|latest" />
        description: ''
  - name: getProperties(BlobGetPropertiesOptions)
    uid: '@azure/storage-blob.BlobClient.getProperties|latest'
    package: '@azure/storage-blob'
    summary: >-
      Returns all user-defined metadata, standard HTTP properties, and system
      properties

      for the blob. It does not return the content of the blob.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getProperties(options?: BlobGetPropertiesOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/storage-blob.BlobGetPropertiesOptions|latest" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="@azure/storage-blob.BlobGetPropertiesResponse|latest"
          />&gt;
        description: ''
  - name: getTags(BlobGetTagsOptions)
    uid: '@azure/storage-blob.BlobClient.getTags|latest'
    package: '@azure/storage-blob'
    summary: Gets the tags associated with the underlying blob.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getTags(options?: BlobGetTagsOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/storage-blob.BlobGetTagsOptions|latest" />
          description: ''
      return:
        type: Promise&lt;<xref uid="@azure/storage-blob.BlobGetTagsResponse|latest" />&gt;
        description: ''
  - name: >-
      setAccessTier(BlockBlobTier | PremiumPageBlobTier | string,
      BlobSetTierOptions)
    uid: '@azure/storage-blob.BlobClient.setAccessTier|latest'
    package: '@azure/storage-blob'
    summary: >-
      Sets the tier on a blob. The operation is allowed on a page blob in a
      premium

      storage account and on a block blob in a blob storage account (locally
      redundant

      storage only). A premium page blob's tier determines the allowed size,
      IOPS,

      and bandwidth of the blob. A block blob's tier determines Hot/Cool/Archive

      storage type. This operation does not update the blob's ETag.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setAccessTier(tier: BlockBlobTier | PremiumPageBlobTier |
        string, options?: BlobSetTierOptions)
      parameters:
        - id: tier
          type: >-
            <xref uid="@azure/storage-blob.BlockBlobTier|latest" /> | <xref
            uid="@azure/storage-blob.PremiumPageBlobTier|latest" /> | string
          description: >-
            The tier to be set on the blob. Valid values are Hot, Cool, or
            Archive.
        - id: options
          type: <xref uid="@azure/storage-blob.BlobSetTierOptions|latest" />
          description: ''
      return:
        type: Promise&lt;<xref uid="@azure/storage-blob.BlobSetTierResponse|latest" />&gt;
        description: ''
  - name: 'setHTTPHeaders(BlobHTTPHeaders, BlobSetHTTPHeadersOptions)'
    uid: '@azure/storage-blob.BlobClient.setHTTPHeaders|latest'
    package: '@azure/storage-blob'
    summary: >-
      Sets system properties on the blob.

      If no value provided, or no value provided for the specified blob HTTP
      headers,

      these blob HTTP headers without a value will be cleared.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setHTTPHeaders(blobHTTPHeaders?: BlobHTTPHeaders, options?:
        BlobSetHTTPHeadersOptions)
      parameters:
        - id: blobHTTPHeaders
          type: <xref uid="@azure/storage-blob.BlobHTTPHeaders|latest" />
          description: ''
        - id: options
          type: <xref uid="@azure/storage-blob.BlobSetHTTPHeadersOptions|latest" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="@azure/storage-blob.BlobSetHTTPHeadersResponse|latest"
          />&gt;
        description: ''
  - name: 'setMetadata(Metadata, BlobSetMetadataOptions)'
    uid: '@azure/storage-blob.BlobClient.setMetadata|latest'
    package: '@azure/storage-blob'
    summary: >-
      Sets user-defined metadata for the specified blob as one or more
      name-value pairs.

      If no option provided, or no metadata defined in the parameter, the blob

      metadata will be removed.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function setMetadata(metadata?: Metadata, options?:
        BlobSetMetadataOptions)
      parameters:
        - id: metadata
          type: <xref uid="@azure/storage-blob.Metadata|latest" />
          description: ''
        - id: options
          type: <xref uid="@azure/storage-blob.BlobSetMetadataOptions|latest" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="@azure/storage-blob.BlobSetMetadataResponse|latest"
          />&gt;
        description: ''
  - name: 'setTags(Tags, BlobSetTagsOptions)'
    uid: '@azure/storage-blob.BlobClient.setTags|latest'
    package: '@azure/storage-blob'
    summary: >-
      Sets tags on the underlying blob.

      A blob can have up to 10 tags. Tag keys must be between 1 and 128
      characters.  Tag values must be between 0 and 256 characters.

      Valid tag key and value characters include lower and upper case letters,
      digits (0-9),

      space (' '), plus ('+'), minus ('-'), period ('.'), foward slash ('/'),
      colon (':'), equals ('='), and underscore ('_').
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function setTags(tags: Tags, options?: BlobSetTagsOptions)'
      parameters:
        - id: tags
          type: <xref uid="@azure/storage-blob.Tags|latest" />
          description: ''
        - id: options
          type: <xref uid="@azure/storage-blob.BlobSetTagsOptions|latest" />
          description: ''
      return:
        type: Promise&lt;<xref uid="@azure/storage-blob.BlobSetTagsResponse|latest" />&gt;
        description: ''
  - name: 'syncCopyFromURL(string, BlobSyncCopyFromURLOptions)'
    uid: '@azure/storage-blob.BlobClient.syncCopyFromURL|latest'
    package: '@azure/storage-blob'
    summary: >-
      The synchronous Copy From URL operation copies a blob or an internet
      resource to a new blob. It will not

      return a response until the copy is complete.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function syncCopyFromURL(copySource: string, options?:
        BlobSyncCopyFromURLOptions)
      parameters:
        - id: copySource
          type: string
          description: >-
            The source URL to copy from, Shared Access Signature(SAS) maybe
            needed for authentication
        - id: options
          type: <xref uid="@azure/storage-blob.BlobSyncCopyFromURLOptions|latest" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="@azure/storage-blob.BlobCopyFromURLResponse|latest"
          />&gt;
        description: ''
  - name: undelete(BlobUndeleteOptions)
    uid: '@azure/storage-blob.BlobClient.undelete|latest'
    package: '@azure/storage-blob'
    summary: >-
      Restores the contents and metadata of soft deleted blob and any associated

      soft deleted snapshots. Undelete Blob is supported only on version
      2017-07-29

      or later.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function undelete(options?: BlobUndeleteOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/storage-blob.BlobUndeleteOptions|latest" />
          description: ''
      return:
        type: Promise&lt;<xref uid="@azure/storage-blob.BlobUndeleteResponse|latest" />&gt;
        description: ''
  - name: withSnapshot(string)
    uid: '@azure/storage-blob.BlobClient.withSnapshot|latest'
    package: '@azure/storage-blob'
    summary: >-
      Creates a new BlobClient object identical to the source but with the
      specified snapshot timestamp.

      Provide "" will remove the snapshot and return a Client to the base blob.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function withSnapshot(snapshot: string)'
      parameters:
        - id: snapshot
          type: string
          description: The snapshot timestamp.
      return:
        type: <xref uid="@azure/storage-blob.BlobClient|latest" />
        description: >-
          A new BlobClient object identical to the source but with the specified
          snapshot timestamp
  - name: withVersion(string)
    uid: '@azure/storage-blob.BlobClient.withVersion|latest'
    package: '@azure/storage-blob'
    summary: |-
      Creates a new BlobClient object pointing to a version of this blob.
      Provide "" will remove the versionId and return a Client to the base blob.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function withVersion(versionId: string)'
      parameters:
        - id: versionId
          type: string
          description: The versionId.
      return:
        type: <xref uid="@azure/storage-blob.BlobClient|latest" />
        description: A new BlobClient object pointing to the version of this blob.
extends: <xref uid="@azure/storage-blob.StorageClient|latest" />
