### YamlMime:TSType
name: FormTrainingClient
uid: '@azure/ai-form-recognizer.FormTrainingClient|preview'
package: '@azure/ai-form-recognizer'
summary: Client class for training and managing custom form models.
fullName: FormTrainingClient
remarks: ''
isPreview: false
isDeprecated: false
type: class
constructors:
  - name: >-
      FormTrainingClient(string, TokenCredential | KeyCredential,
      FormRecognizerClientOptions)
    uid: '@azure/ai-form-recognizer.FormTrainingClient.constructor|preview'
    package: '@azure/ai-form-recognizer'
    summary: >-
      Creates an instance of FormTrainingClient.

      Example usage:

      ```ts

      import {FormTrainingClient, AzureKeyCredential } from
      "@azure/ai-form-recognizer";


      const client = new FormTrainingClient(
         "<service endpoint>",
         new AzureKeyCredential("<api key>")
      );

      ```
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        new FormTrainingClient(endpointUrl: string, credential: TokenCredential
        | KeyCredential, options?: FormRecognizerClientOptions)
      parameters:
        - id: endpointUrl
          type: string
          description: Url to an Azure Form Recognizer service endpoint
        - id: credential
          type: TokenCredential | KeyCredential
          description: Used to authenticate requests to the service.
        - id: options
          type: <xref uid="@azure/ai-form-recognizer.FormRecognizerClientOptions|preview" />
          description: ''
properties:
  - name: endpointUrl
    uid: '@azure/ai-form-recognizer.FormTrainingClient.endpointUrl|preview'
    package: '@azure/ai-form-recognizer'
    summary: Url to an Azure Form Recognizer service endpoint
    fullName: endpointUrl
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'endpointUrl: string'
      return:
        type: string
        description: ''
methods:
  - name: 'beginCopyModel(string, CopyAuthorization, BeginCopyModelOptions)'
    uid: '@azure/ai-form-recognizer.FormTrainingClient.beginCopyModel|preview'
    package: '@azure/ai-form-recognizer'
    summary: >-
      Copies a custom model from this resource (the source) to the specified
      target Form Recognizer resource.

      This method returns a long running operation poller that allows you to
      wait

      indefinitely until the operation is completed.

      Note that the onProgress callback will not be invoked if the operation
      completes in the first

      request, and attempting to cancel a completed copy will result in an error
      being thrown.

      Example usage:

      ```ts

      const targetClient = new FormTrainingClient(targetEndpoint, new
      AzureKeyCredential(targetApiKey));

      const authorization = await
      targetClient.getCopyAuthorization(targetResourceId, targetResourceRegion);


      const sourceClient = new FormTrainingClient(endpoint, new
      AzureKeyCredential(apiKey));

      const poller = await sourceClient.beginCopyModel(sourceModelId,
      authorization, {
        onProgress: (state) => {
          console.log(`Copy model status: ${state.status}`);
        }
      });

      const result = await poller.pollUntilDone();

      ```
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCopyModel(modelId: string, target: CopyAuthorization,
        options?: BeginCopyModelOptions)
      parameters:
        - id: modelId
          type: string
          description: >-
            Id of the custom model in this resource to be copied to the target
            Form Recognizer resource
        - id: target
          type: <xref uid="@azure/ai-form-recognizer.CopyAuthorization|preview" />
          description: >-
            Copy authorization produced by calling
            `targetTrainingClient.getCopyAuthorization()`
        - id: options
          type: <xref uid="@azure/ai-form-recognizer.BeginCopyModelOptions|preview" />
          description: ''
      return:
        type: >-
          Promise&lt;PollerLike&lt;<xref
          uid="@azure/ai-form-recognizer.CopyModelOperationState|preview" />, <xref
          uid="@azure/ai-form-recognizer.CustomFormModelInfo|preview" />&gt;&gt;
        description: ''
  - name: 'beginCreateComposedModel(string[], BeginCreateComposedModelOptions)'
    uid: '@azure/ai-form-recognizer.FormTrainingClient.beginCreateComposedModel|preview'
    package: '@azure/ai-form-recognizer'
    summary: >
      Combines pre-existing models with labels into a single composed model.

      The composed model will contain copies of all of its input submodels, and
      it will

      choose (using a machine learning algorithm) the most appropriate of its
      input models

      to use during form recognition.


      This method returns a long-running operation poller that allows you to
      wait

      indefinitely until the operation is completed.


      Notes:

      - Only labeled models can be composed. Attempting to compose an unlabeled
      model will
        result in an error.
      - the onProgress callback will not be invoked if the operation completes
      in the first
        request, and attempting to cancel a completed copy will result in an error being thrown.
      - evena when the training operation fails, a model is still created in the
      Azure Form
        Recognizer resource.

      Example usage:

      ```ts

      const modelIds = ["<model ID 1>", "<model ID 2>", "<model ID 3>"];

      const trainingClient = new FormTrainingClient(endpoint, new
      AzureKeyCredential(apiKey));


      const poller = await trainingClient.beginCreateComposedModel(modelIds, {
        modelName: "<optional name for the composed model>",
        onProgress: (state) => { console.log("training status: "); console.log(state); }
      });

      const composedModel = await poller.pollUntilDone();

      ```
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginCreateComposedModel(modelIds: string[], options:
        BeginCreateComposedModelOptions)
      parameters:
        - id: modelIds
          type: 'string[]'
          description: an array of model IDs within the Form Recognizer resouce to compose
        - id: options
          type: >-
            <xref
            uid="@azure/ai-form-recognizer.BeginCreateComposedModelOptions|preview" />
          description: |
            Options to start the create composed model operation
      return:
        type: >-
          Promise&lt;PollerLike&lt;<xref
          uid="@azure/ai-form-recognizer.TrainingOperationState|preview" />, <xref
          uid="@azure/ai-form-recognizer.CustomFormModel|preview" />&gt;&gt;
        description: ''
  - name: 'beginTraining(string, boolean, BeginTrainingOptions)'
    uid: '@azure/ai-form-recognizer.FormTrainingClient.beginTraining|preview'
    package: '@azure/ai-form-recognizer'
    summary: >
      Creates and trains a custom form model.

      If the `useTrainingLabels` parameter is set to `true`, then the operation
      will search

      for label files in addition to the training documents, and it will create
      a labeled

      model with the field names specified by the labels. Otherwise, it will
      create an

      unlabeled model automatically that returns generated field names for the
      items it

      determines are fields within the document structure.


      This method returns a long-running operation poller that allows you to
      wait

      indefinitely until the operation is completed.


      Notes:

      - The onProgress callback will not be invoked if the operation completes
      in the first
        request, and attempting to cancel a completed copy will result in an error being thrown.
      - Even when the training operation fails, a model is still created in the
      Azure Form
        Recognizer resource.

      Example usage:

      ```ts

      const trainingFilesUrl = "<url to the blob container storing training
      documents>";

      const trainingClient = new FormTrainingClient(endpoint, new
      AzureKeyCredential(apiKey));


      const poller = await trainingClient.beginTraining(trainingFilesUrl, false,
      {
        onProgress: (state) => { console.log("training status: "); console.log(state); }
      });

      const model = await poller.pollUntilDone();

      ```
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function beginTraining(trainingFilesUrl: string, useTrainingLabels:
        boolean, options?: BeginTrainingOptions)
      parameters:
        - id: trainingFilesUrl
          type: string
          description: >-
            accessible url to an Azure Storage Blob container storing the
            training documents and optional label files
        - id: useTrainingLabels
          type: boolean
          description: specifies whether or not to search for and train using label files
        - id: options
          type: <xref uid="@azure/ai-form-recognizer.BeginTrainingOptions|preview" />
          description: |
            options to start the model training operation
      return:
        type: >-
          Promise&lt;PollerLike&lt;<xref
          uid="@azure/ai-form-recognizer.TrainingOperationState|preview" />, <xref
          uid="@azure/ai-form-recognizer.CustomFormModel|preview" />&gt;&gt;
        description: ''
  - name: 'deleteModel(string, DeleteModelOptions)'
    uid: '@azure/ai-form-recognizer.FormTrainingClient.deleteModel|preview'
    package: '@azure/ai-form-recognizer'
    summary: >-
      Mark model for deletion. Model artifacts will be permanently removed
      within 48 hours.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function deleteModel(modelId: string, options?: DeleteModelOptions)'
      parameters:
        - id: modelId
          type: string
          description: Id of the model to mark for deletion
        - id: options
          type: <xref uid="@azure/ai-form-recognizer.DeleteModelOptions|preview" />
          description: |
            Options to the Delete Model operation
      return:
        type: Promise&lt;RestResponse&gt;
        description: ''
  - name: getAccountProperties(GetAccountPropertiesOptions)
    uid: '@azure/ai-form-recognizer.FormTrainingClient.getAccountProperties|preview'
    package: '@azure/ai-form-recognizer'
    summary: Retrieves summary information about the cognitive service account
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getAccountProperties(options?: GetAccountPropertiesOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/ai-form-recognizer.GetAccountPropertiesOptions|preview" />
          description: |
            Options to GetSummary operation
      return:
        type: >-
          Promise&lt;<xref uid="@azure/ai-form-recognizer.AccountProperties|preview"
          />&gt;
        description: ''
  - name: 'getCopyAuthorization(string, string, GetCopyAuthorizationOptions)'
    uid: '@azure/ai-form-recognizer.FormTrainingClient.getCopyAuthorization|preview'
    package: '@azure/ai-form-recognizer'
    summary: >
      Generate an authorization for copying a custom model into this Azure Form
      Recognizer resource.

      This method should be called on a client that is authenticated using the
      target resource (where the

      model will be copied to) credentials, and the output can be passed as the
      `target` parameter to the

      `beginCopyModel` method of a source client.


      The required `resourceId` and `resourceRegion` are properties of an Azure
      Form Recognizer resource and their values can be found in the Azure
      Portal.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: >-
        function getCopyAuthorization(resourceId: string, resourceRegion:
        string, options?: GetCopyAuthorizationOptions)
      parameters:
        - id: resourceId
          type: string
          description: >-
            Id of the Azure Form Recognizer resource where a custom model will
            be copied to
        - id: resourceRegion
          type: string
          description: >-
            Location of the Azure Form Recognizer resource, must be a valid
            region name supported by Azure Cognitive Services. See
            https://aka.ms/azsdk/cognitiveservices/regionalavailability for
            information about the regional availability of Azure Cognitive
            Services.
        - id: options
          type: <xref uid="@azure/ai-form-recognizer.GetCopyAuthorizationOptions|preview" />
          description: ''
      return:
        type: >-
          Promise&lt;<xref uid="@azure/ai-form-recognizer.CopyAuthorization|preview"
          />&gt;
        description: The authorization to copy a custom model
  - name: 'getCustomModel(string, GetModelOptions)'
    uid: '@azure/ai-form-recognizer.FormTrainingClient.getCustomModel|preview'
    package: '@azure/ai-form-recognizer'
    summary: Get detailed information about a custom model from training.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function getCustomModel(modelId: string, options?: GetModelOptions)'
      parameters:
        - id: modelId
          type: string
          description: Id of the model to get information
        - id: options
          type: <xref uid="@azure/ai-form-recognizer.GetModelOptions|preview" />
          description: |
            Options to the Get Model operation
      return:
        type: >-
          Promise&lt;<xref uid="@azure/ai-form-recognizer.FormModelResponse|preview"
          />&gt;
        description: ''
  - name: getFormRecognizerClient()
    uid: '@azure/ai-form-recognizer.FormTrainingClient.getFormRecognizerClient|preview'
    package: '@azure/ai-form-recognizer'
    summary: >-
      Creates an instance of <xref:FormTrainingClient> to perform training
      operations

      and to manage trained custom form models.
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function getFormRecognizerClient()
      return:
        type: <xref uid="@azure/ai-form-recognizer.FormRecognizerClient|preview" />
        description: ''
  - name: listCustomModels(ListModelsOptions)
    uid: '@azure/ai-form-recognizer.FormTrainingClient.listCustomModels|preview'
    package: '@azure/ai-form-recognizer'
    summary: >
      Returns an async iterable iterator to list information about all models in
      the cognitive service account.

      .byPage() returns an async iterable iterator to list the blobs in pages.


      Example using `for await` syntax:


      ```js

      const client = new FormTrainingClient(endpoint, new
      AzureKeyCredential(apiKey));

      const result = client.listCustomModels();

      let i = 1;

      for await (const model of result) {
        console.log(`model ${i++}:`);
        console.log(model);
      }

      ```


      Example using `iter.next()`:


      ```js

      let i = 1;

      let iter = client.listCustomModels();

      let modelItem = await iter.next();

      while (!modelItem.done) {
        console.log(`model ${i++}: ${modelItem.value}`);
        modelItem = await iter.next();
      }

      ```


      Example using `byPage()`:


      ```js
       let i = 1;
       for await (const response of client.listCustomModels().byPage()) {
         for (const modelInfo of response.modelList!) {
           console.log(`model ${i++}: ${modelInfo.modelId}`);
         }
       }
      ```
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function listCustomModels(options?: ListModelsOptions)'
      parameters:
        - id: options
          type: <xref uid="@azure/ai-form-recognizer.ListModelsOptions|preview" />
          description: |
            Options to the List Models operation
      return:
        type: >-
          PagedAsyncIterableIterator&lt;<xref
          uid="@azure/ai-form-recognizer.CustomFormModelInfo|preview" />, <xref
          uid="@azure/ai-form-recognizer.ListCustomModelsResponse|preview" />&gt;
        description: ''
