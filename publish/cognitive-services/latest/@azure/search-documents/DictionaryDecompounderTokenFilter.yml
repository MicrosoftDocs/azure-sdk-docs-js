### YamlMime:TSType
name: DictionaryDecompounderTokenFilter
uid: '@azure/search-documents.DictionaryDecompounderTokenFilter|latest'
package: '@azure/search-documents'
summary: >-
  Decomposes compound words found in many Germanic languages. This token filter
  is implemented

  using Apache Lucene.
fullName: DictionaryDecompounderTokenFilter
remarks: ''
isPreview: false
isDeprecated: false
type: interface
properties:
  - name: maxSubwordSize
    uid: '@azure/search-documents.DictionaryDecompounderTokenFilter.maxSubwordSize|latest'
    package: '@azure/search-documents'
    summary: >-
      The maximum subword size. Only subwords shorter than this are outputted.
      Default is 15.

      Maximum is 300. Default value: 15.
    fullName: maxSubwordSize
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'maxSubwordSize?: number'
      return:
        type: number
        description: ''
  - name: minSubwordSize
    uid: '@azure/search-documents.DictionaryDecompounderTokenFilter.minSubwordSize|latest'
    package: '@azure/search-documents'
    summary: >-
      The minimum subword size. Only subwords longer than this are outputted.
      Default is 2. Maximum

      is 300. Default value: 2.
    fullName: minSubwordSize
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'minSubwordSize?: number'
      return:
        type: number
        description: ''
  - name: minWordSize
    uid: '@azure/search-documents.DictionaryDecompounderTokenFilter.minWordSize|latest'
    package: '@azure/search-documents'
    summary: >-
      The minimum word size. Only words longer than this get processed. Default
      is 5. Maximum is

      300. Default value: 5.
    fullName: minWordSize
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'minWordSize?: number'
      return:
        type: number
        description: ''
  - name: name
    uid: '@azure/search-documents.DictionaryDecompounderTokenFilter.name|latest'
    package: '@azure/search-documents'
    summary: >-
      The name of the token filter. It must only contain letters, digits,
      spaces, dashes or

      underscores, can only start and end with alphanumeric characters, and is
      limited to 128

      characters.
    fullName: name
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'name: string'
      return:
        type: string
        description: ''
  - name: odatatype
    uid: '@azure/search-documents.DictionaryDecompounderTokenFilter.odatatype|latest'
    package: '@azure/search-documents'
    summary: Polymorphic Discriminator
    fullName: odatatype
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'odatatype: "#Microsoft.Azure.Search.DictionaryDecompounderTokenFilter"'
      return:
        type: >-
          "#<xref uid="Microsoft.Azure.Search.DictionaryDecompounderTokenFilter"
          />"
        description: ''
  - name: onlyLongestMatch
    uid: '@azure/search-documents.DictionaryDecompounderTokenFilter.onlyLongestMatch|latest'
    package: '@azure/search-documents'
    summary: >-
      A value indicating whether to add only the longest matching subword to the
      output. Default is

      false. Default value: false.
    fullName: onlyLongestMatch
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'onlyLongestMatch?: boolean'
      return:
        type: boolean
        description: ''
  - name: wordList
    uid: '@azure/search-documents.DictionaryDecompounderTokenFilter.wordList|latest'
    package: '@azure/search-documents'
    summary: The list of words to match against.
    fullName: wordList
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'wordList: string[]'
      return:
        type: 'string[]'
        description: ''
