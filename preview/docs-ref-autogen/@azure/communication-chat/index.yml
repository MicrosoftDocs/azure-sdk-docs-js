### YamlMime:TSPackage
uid: '@azure/communication-chat'
name: '@azure/communication-chat'
summary: ''
type: package
classes:
  - '@azure/communication-chat.ChatClient'
  - '@azure/communication-chat.ChatThreadClient'
  - '@azure/communication-chat.CommunicationUserCredentialPolicy'
  - '@azure/communication-chat.ChatApiClient'
  - '@azure/communication-chat.ChatApiClientContext'
interfaces:
  - '@azure/communication-chat.AddMembersRequest'
  - '@azure/communication-chat.ChatClientOptions'
  - '@azure/communication-chat.ChatMessage'
  - '@azure/communication-chat.ChatThread'
  - '@azure/communication-chat.ChatThreadClientOptions'
  - '@azure/communication-chat.ChatThreadInfo'
  - '@azure/communication-chat.ChatThreadMember'
  - '@azure/communication-chat.CreateChatThreadRequest'
  - '@azure/communication-chat.ListPageSettings'
  - '@azure/communication-chat.OperationResponse'
  - '@azure/communication-chat.ReadReceipt'
  - '@azure/communication-chat.RestAddMembersRequest'
  - '@azure/communication-chat.RestChatMessage'
  - '@azure/communication-chat.RestChatThread'
  - '@azure/communication-chat.RestChatThreadMember'
  - '@azure/communication-chat.RestCreateChatThreadRequest'
  - '@azure/communication-chat.RestListChatThreadsOptions'
  - '@azure/communication-chat.RestListMessagesOptions'
  - '@azure/communication-chat.RestReadReceipt'
  - '@azure/communication-chat.RestUpdateMessageOptions'
  - '@azure/communication-chat.RestUpdateThreadOptions'
  - '@azure/communication-chat.SendChatMessageRequest'
  - '@azure/communication-chat.SendChatMessageResult'
  - '@azure/communication-chat.SendMessageOptions'
  - '@azure/communication-chat.SendMessageRequest'
  - '@azure/communication-chat.SendReadReceiptRequest'
  - '@azure/communication-chat.UpdateMessageOptions'
  - '@azure/communication-chat.UpdateThreadOptions'
  - '@azure/communication-chat.AddChatThreadMembersRequest'
  - '@azure/communication-chat.ChatApiClientListChatMessagesNextOptionalParams'
  - '@azure/communication-chat.ChatApiClientListChatMessagesOptionalParams'
  - '@azure/communication-chat.ChatApiClientListChatThreadsNextOptionalParams'
  - '@azure/communication-chat.ChatApiClientListChatThreadsOptionalParams'
  - '@azure/communication-chat.ChatApiClientOptionalParams'
  - '@azure/communication-chat.ChatMessagesCollection'
  - '@azure/communication-chat.ChatThreadMembersCollection'
  - '@azure/communication-chat.ChatThreadsInfoCollection'
  - '@azure/communication-chat.ErrorModel'
  - '@azure/communication-chat.IndividualStatusResponse'
  - '@azure/communication-chat.MultiStatusResponse'
  - '@azure/communication-chat.ReadReceiptsCollection'
  - '@azure/communication-chat.UpdateChatMessageRequest'
  - '@azure/communication-chat.UpdateChatThreadRequest'
  - '@azure/communication-chat.RecordedClient'
typeAliases:
  - '@azure/communication-chat.AddMembersOptions'
  - '@azure/communication-chat.ChatMessagePriority'
  - '@azure/communication-chat.CreateChatThreadOptions'
  - '@azure/communication-chat.DeleteChatThreadOptions'
  - '@azure/communication-chat.DeleteMessageOptions'
  - '@azure/communication-chat.GetChatMessageResponse'
  - '@azure/communication-chat.GetChatThreadOptions'
  - '@azure/communication-chat.GetChatThreadResponse'
  - '@azure/communication-chat.GetMessageOptions'
  - '@azure/communication-chat.ListChatThreadsOptions'
  - '@azure/communication-chat.ListMembersOptions'
  - '@azure/communication-chat.ListMessagesOptions'
  - '@azure/communication-chat.ListReadReceiptsOptions'
  - '@azure/communication-chat.RemoveMemberOptions'
  - '@azure/communication-chat.SendChatMessageResponse'
  - '@azure/communication-chat.SendReadReceiptOptions'
  - '@azure/communication-chat.SendTypingNotificationOptions'
  - '@azure/communication-chat.WithResponse'
  - '@azure/communication-chat.ChatApiClientCreateChatThreadResponse'
  - '@azure/communication-chat.ChatApiClientGetChatMessageResponse'
  - '@azure/communication-chat.ChatApiClientGetChatThreadResponse'
  - '@azure/communication-chat.ChatApiClientListChatMessagesNextResponse'
  - '@azure/communication-chat.ChatApiClientListChatMessagesResponse'
  - '@azure/communication-chat.ChatApiClientListChatReadReceiptsNextResponse'
  - '@azure/communication-chat.ChatApiClientListChatReadReceiptsResponse'
  - '@azure/communication-chat.ChatApiClientListChatThreadMembersNextResponse'
  - '@azure/communication-chat.ChatApiClientListChatThreadMembersResponse'
  - '@azure/communication-chat.ChatApiClientListChatThreadsNextResponse'
  - '@azure/communication-chat.ChatApiClientListChatThreadsResponse'
  - '@azure/communication-chat.ChatApiClientSendChatMessageResponse'
functions:
  - name: createChatClient(string)
    uid: '@azure/communication-chat.createChatClient'
    package: '@azure/communication-chat'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function createChatClient(userToken: string)'
      parameters:
        - id: userToken
          type: string
          description: ''
      return:
        type: <xref uid="@azure/communication-chat.ChatClient" />
        description: ''
  - name: createRecorder(Context)
    uid: '@azure/communication-chat.createRecorder'
    package: '@azure/communication-chat'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function createRecorder(context: Context)'
      parameters:
        - id: context
          type: Context
          description: ''
      return:
        type: Recorder
        description: ''
  - name: createTestUser()
    uid: '@azure/communication-chat.createTestUser'
    package: '@azure/communication-chat'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: function createTestUser()
      return:
        type: Promise&lt;CommunicationUserToken&gt;
        description: ''
  - name: deleteTestUser(CommunicationUser)
    uid: '@azure/communication-chat.deleteTestUser'
    package: '@azure/communication-chat'
    summary: ''
    remarks: ''
    isPreview: false
    isDeprecated: false
    syntax:
      content: 'function deleteTestUser(testUser: CommunicationUser)'
      parameters:
        - id: testUser
          type: CommunicationUser
          description: ''
      return:
        type: Promise&lt;void&gt;
        description: ''
